# Problem 29
# Consider all integer combinations of a**b for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
# 2**2 = 4, 2**3 = 8, 2**4 = 16, 2**5 = 32
# 3**2 = 9, 3**3 = 27, 3**4 = 81, 3**5 = 243
# 4**2 = 16, 4**3 = 64, 4**4 = 256, 4**5 = 1024
# 5**2 = 25, 5**3 = 125, 5**4 = 625, 5**5 = 3125
# If they are then placed in numerical order, with any repeats removed,
# we get the following sequence of 15 distinct terms:
# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
# How many distinct terms are in the sequence generated by a**b for
# 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?

def distinct_powers(start_a, last_a, start_b, last_b)
	all_combinations = calculate_all_combinations(start_a, last_a, start_b, last_b)
	distinct_terms = remove_duplicates(all_combinations)
	return distinct_terms.size
end

# Helper methods
def calculate_all_combinations(start_a, last_a, start_b, last_b)
	list_of_combinations = []
	for a in start_a..last_a
		for b in start_b..last_b
			list_of_combinations << a**b
		end
	end
	return list_of_combinations
end

def remove_duplicates(list_of_numbers)
	distinct_list = []
	list_of_numbers = list_of_numbers.sort
	list_of_numbers.each do |number|
		if distinct_list.include?(number) == false
			distinct_list << number
		end
	end
	return distinct_list
end


start = Time.now
a_start, a_last = 2, 100
b_start, b_last = 2, 100
puts "Answer: #{distinct_powers(a_start, a_last, b_start, b_last)}"
puts "Execution Time: #{Time.now - start}"
# Answer is 9183